
package RestDivReference;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WSRestDiv", targetNamespace = "http://WebServices/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WSRestDiv {


    /**
     * 
     * @param second
     * @param first
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "restar", targetNamespace = "http://WebServices/", className = "RestDivReference.Restar")
    @ResponseWrapper(localName = "restarResponse", targetNamespace = "http://WebServices/", className = "RestDivReference.RestarResponse")
    @Action(input = "http://WebServices/WSRestDiv/restarRequest", output = "http://WebServices/WSRestDiv/restarResponse")
    public double restar(
        @WebParam(name = "first", targetNamespace = "")
        double first,
        @WebParam(name = "second", targetNamespace = "")
        double second);

    /**
     * 
     * @param second
     * @param first
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "dividir", targetNamespace = "http://WebServices/", className = "RestDivReference.Dividir")
    @ResponseWrapper(localName = "dividirResponse", targetNamespace = "http://WebServices/", className = "RestDivReference.DividirResponse")
    @Action(input = "http://WebServices/WSRestDiv/dividirRequest", output = "http://WebServices/WSRestDiv/dividirResponse")
    public double dividir(
        @WebParam(name = "first", targetNamespace = "")
        double first,
        @WebParam(name = "second", targetNamespace = "")
        double second);

}
